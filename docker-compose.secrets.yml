version: "3.8"

services:
  agendamento-cw-api:
    image: node:18-alpine
    working_dir: /app
    command: |
      sh -c "
        echo 'Setting up API service...' &&
        apk add --no-cache git curl &&
        git clone --depth 1 https://github.com/CaioGranato/agendamento_cw.git /tmp/repo &&
        cp -r /tmp/repo/api/* /app/ &&
        npm ci --only=production --silent &&
        echo 'API service starting...' &&
        exec node server.js
      "
    
    networks:
      - odmaxnet

    environment:
      - NODE_ENV=production
      - PORT=3000
      - TZ=America/Sao_Paulo
      - CORS_ORIGIN=${CORS_ORIGIN:-*}

    secrets:
      - database_url
      - n8n_webhook_url
      - n8n_alert_webhook_url
      - gemini_api_key

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          cpus: "1.0"
          memory: 1024M
        reservations:
          cpus: "0.2"
          memory: 256M
      restart_policy:
        condition: on-failure
        delay: 15s
        max_attempts: 3
        window: 120s
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=odmaxnet"
        - "traefik.http.routers.agendamento-cw-api.rule=Host(`apiag.odmax.com.br`)"
        - "traefik.http.routers.agendamento-cw-api.entrypoints=websecure"
        - "traefik.http.routers.agendamento-cw-api.tls=true"
        - "traefik.http.routers.agendamento-cw-api.tls.certresolver=letsencryptresolver"
        - "traefik.http.services.agendamento-cw-api.loadbalancer.server.port=3000"

  agendamento-cw-frontend:
    image: nginx:alpine
    working_dir: /tmp/build
    command: |
      sh -c "
        echo 'Setting up Frontend service...' &&
        apk add --no-cache git nodejs npm curl &&
        git clone --depth 1 https://github.com/CaioGranato/agendamento_cw.git /tmp/repo &&
        cp -r /tmp/repo/chatwoot-message-scheduler/* /tmp/build/ &&
        cd /tmp/build &&
        npm ci --silent &&
        VITE_API_BASE_URL=https://apiag.odmax.com.br/api npm run build &&
        cp -r dist/* /usr/share/nginx/html/ &&
        echo 'server {
          listen 80;
          root /usr/share/nginx/html;
          index index.html;
          location / { try_files \$uri \$uri/ /index.html; }
          location /health { return 200 \"healthy\"; }
        }' > /etc/nginx/conf.d/default.conf &&
        exec nginx -g 'daemon off;'
      "

    networks:
      - odmaxnet

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

    deploy:
      mode: replicated
      replicas: 1
      resources:
        limits:
          cpus: "0.5"
          memory: 512M
        reservations:
          cpus: "0.1"
          memory: 128M
      restart_policy:
        condition: on-failure
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=odmaxnet"
        - "traefik.http.routers.agendamento-cw-frontend.rule=Host(`agendamento.odmax.com.br`)"
        - "traefik.http.routers.agendamento-cw-frontend.entrypoints=websecure"
        - "traefik.http.routers.agendamento-cw-frontend.tls=true"
        - "traefik.http.routers.agendamento-cw-frontend.tls.certresolver=letsencryptresolver"
        - "traefik.http.services.agendamento-cw-frontend.loadbalancer.server.port=80"

secrets:
  database_url:
    external: true
  n8n_webhook_url:
    external: true
  n8n_alert_webhook_url:
    external: true
  gemini_api_key:
    external: true

networks:
  odmaxnet:
    external: true
    name: odmaxnet