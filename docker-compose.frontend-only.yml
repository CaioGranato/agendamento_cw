version: "3.8"

services:
  # Frontend Build and Serve Service Only - Repository Based
  agendamento-cw-frontend:
    image: nginx:alpine
    working_dir: /tmp/build
    command: |
      sh -c "
        echo 'Setting up Frontend service...' &&
        apk add --no-cache git nodejs npm curl &&
        git clone --depth 1 https://github.com/CaioGranato/agendamento_cw.git /tmp/repo &&
        cp -r /tmp/repo/chatwoot-message-scheduler/* /tmp/build/ &&
        cd /tmp/build &&
        echo 'Installing dependencies...' &&
        npm install --silent &&
        echo 'Creating production build...' &&
        export VITE_API_BASE_URL=https://apiag.odmax.com.br &&
        npm run build &&
        echo 'Setting up nginx...' &&
        cp -r dist/* /usr/share/nginx/html/ &&
        echo 'server {
          listen 80;
          server_name localhost;
          root /usr/share/nginx/html;
          index index.html;
          
          location / {
            try_files \$uri \$uri/ /index.html;
            add_header Cache-Control \"no-cache, must-revalidate\";
            add_header X-Content-Type-Options nosniff;
            add_header X-Frame-Options SAMEORIGIN;
            add_header X-XSS-Protection \"1; mode=block\";
          }
          
          location /assets/ {
            expires 1y;
            add_header Cache-Control \"public, immutable\";
          }
          
          location /health {
            access_log off;
            return 200 \"healthy\n\";
            add_header Content-Type text/plain;
          }
        }' > /etc/nginx/conf.d/default.conf &&
        echo 'Starting nginx...' &&
        exec nginx -g 'daemon off;'
      "

    networks:
      - odmaxnet

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          cpus: "0.5"
          memory: 512M
        reservations:
          cpus: "0.1"
          memory: 128M
      restart_policy:
        condition: on-failure
        delay: 15s
        max_attempts: 3
        window: 120s
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback
        order: stop-first
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=odmaxnet"
        - "traefik.http.routers.agendamento-cw-frontend.rule=Host(`agendamento.odmax.com.br`)"
        - "traefik.http.routers.agendamento-cw-frontend.entrypoints=websecure"
        - "traefik.http.routers.agendamento-cw-frontend.tls=true"
        - "traefik.http.routers.agendamento-cw-frontend.tls.certresolver=letsencryptresolver"
        - "traefik.http.services.agendamento-cw-frontend.loadbalancer.server.port=80"
        - "traefik.http.routers.agendamento-cw-frontend.middlewares=frontend-headers"
        - "traefik.http.middlewares.frontend-headers.headers.customrequestheaders.X-Forwarded-Proto=https"

networks:
  odmaxnet:
    external: true
    name: odmaxnet