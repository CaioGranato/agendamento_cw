version: "3.8"

services:
  api:
    image: seu-usuario-dockerhub/agendamento-cw-api:latest # <- IMAGEM DO DOCKER HUB
    networks:
      - odmaxnet
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://postgres:SUA_SENHA_AQUI@postgres:5432/postgres
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=odmaxnet"
        - "traefik.http.routers.agendamento-cw-api.rule=Host(`${API_DOMAIN}`)"
        - "traefik.http.routers.agendamento-cw-api.entrypoints=websecure"
        - "traefik.http.routers.agendamento-cw-api.tls=true"
        - "traefik.http.routers.agendamento-cw-api.tls.certresolver=letsencryptresolver"
        - "traefik.http.services.agendamento-cw-api.loadbalancer.server.port=3000"

  frontend:
    image: seu-usuario-dockerhub/agendamento-cw-frontend:latest # <- IMAGEM DO DOCKER HUB
    networks:
      - odmaxnet
    env_file:
      - .env
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=odmaxnet"
        - "traefik.http.routers.agendamento-cw-frontend.rule=Host(`${FRONTEND_DOMAIN}`)"
        - "traefik.http.routers.agendamento-cw-frontend.entrypoints=websecure"
        - "traefik.http.routers.agendamento-cw-frontend.tls=true"
        - "traefik.http.routers.agendamento-cw-frontend.tls.certresolver=letsencryptresolver"
        - "traefik.http.services.agendamento-cw-frontend.loadbalancer.server.port=80"

networks:
  odmaxnet:
    external: true
    name: odmaxnet

secrets:
  postgres_password:
    external: true